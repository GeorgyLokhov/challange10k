/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
 */

require('dotenv').config();
const { google } = require('googleapis');
const fs = require('fs');
const path = require('path');
const readline = require('readline');
const axios = require('axios');

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
async function setupEnvironmentVariables() {
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
  if (!fs.existsSync('.env')) {
    console.log('‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ .env.example...');
    
    if (fs.existsSync('.env.example')) {
      fs.copyFileSync('.env.example', '.env');
      console.log('‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏.');
    } else {
      console.error('‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é.');
      return false;
    }
  } else {
    console.log('‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
  }
  
  return true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets API
async function testGoogleSheetsConnection() {
  console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets API...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (!process.env.GOOGLE_CREDENTIALS || !process.env.GOOGLE_SHEET_ID) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Google Sheets API.');
    return false;
  }
  
  try {
    // –ü–∞—Ä—Å–∏–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const credentials = JSON.parse(process.env.GOOGLE_CREDENTIALS);
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const auth = new google.auth.GoogleAuth({
      credentials,
      scopes: ['https://www.googleapis.com/auth/spreadsheets']
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
    const authClient = await auth.getClient();
    const sheetsClient = google.sheets({ version: 'v4', auth: authClient });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
    const response = await sheetsClient.spreadsheets.get({
      spreadsheetId: process.env.GOOGLE_SHEET_ID
    });
    
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ "${response.data.properties.title}" —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.`);
    return { sheetsClient, spreadsheetTitle: response.data.properties.title };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets API:', error.message);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
async function setupGoogleSheet(sheetsClient) {
  console.log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–∏—Å—Ç–∞ "WeeklyReports"
    const response = await sheetsClient.spreadsheets.get({
      spreadsheetId: process.env.GOOGLE_SHEET_ID
    });
    
    const sheets = response.data.sheets;
    let weeklyReportsSheet = sheets.find(sheet => 
      sheet.properties.title === 'WeeklyReports'
    );
    
    // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!weeklyReportsSheet) {
      console.log('‚ö†Ô∏è  –õ–∏—Å—Ç "WeeklyReports" –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º...');
      
      await sheetsClient.spreadsheets.batchUpdate({
        spreadsheetId: process.env.GOOGLE_SHEET_ID,
        requestBody: {
          requests: [
            {
              addSheet: {
                properties: {
                  title: 'WeeklyReports'
                }
              }
            }
          ]
        }
      });
      
      console.log('‚úÖ –õ–∏—Å—Ç "WeeklyReports" —Å–æ–∑–¥–∞–Ω.');
      
      // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤
      const updatedResponse = await sheetsClient.spreadsheets.get({
        spreadsheetId: process.env.GOOGLE_SHEET_ID
      });
      
      weeklyReportsSheet = updatedResponse.data.sheets.find(sheet => 
        sheet.properties.title === 'WeeklyReports'
      );
    } else {
      console.log('‚úÖ –õ–∏—Å—Ç "WeeklyReports" –Ω–∞–π–¥–µ–Ω.');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const headersResponse = await sheetsClient.spreadsheets.values.get({
      spreadsheetId: process.env.GOOGLE_SHEET_ID,
      range: 'WeeklyReports!A1:I1'
    });
    
    const headers = [
      '–ù–µ–¥–µ–ª—è',
      '–î–∞—Ç–∞',
      'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      '–°–æ—Å—Ç–æ—è–Ω–∏–µ',
      '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
      '–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
      '–ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é',
      '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!headersResponse.data.values || headersResponse.data.values[0].length !== headers.length) {
      console.log('‚ö†Ô∏è  –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω—ã–µ. –î–æ–±–∞–≤–ª—è–µ–º...');
      
      await sheetsClient.spreadsheets.values.update({
        spreadsheetId: process.env.GOOGLE_SHEET_ID,
        range: 'WeeklyReports!A1:I1',
        valueInputOption: 'RAW',
        requestBody: {
          values: [headers]
        }
      });
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      await sheetsClient.spreadsheets.batchUpdate({
        spreadsheetId: process.env.GOOGLE_SHEET_ID,
        requestBody: {
          requests: [
            {
              repeatCell: {
                range: {
                  sheetId: weeklyReportsSheet.properties.sheetId,
                  startRowIndex: 0,
                  endRowIndex: 1
                },
                cell: {
                  userEnteredFormat: {
                    textFormat: {
                      bold: true
                    }
                  }
                },
                fields: 'userEnteredFormat.textFormat.bold'
              }
            },
            {
              updateSheetProperties: {
                properties: {
                  sheetId: weeklyReportsSheet.properties.sheetId,
                  gridProperties: {
                    frozenRowCount: 1
                  }
                },
                fields: 'gridProperties.frozenRowCount'
              }
            }
          ]
        }
      });
      
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã.');
    } else {
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–∞–±–ª–∏—Ü—ã:', error.message);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot API
async function testTelegramBotConnection() {
  console.log('\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot API...');
  
  if (!process.env.TELEGRAM_TOKEN) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞.');
    return false;
  }
  
  try {
    const response = await axios.get(`https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/getMe`);
    
    if (response.data.ok) {
      const bot = response.data.result;
      console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É @${bot.username} (${bot.first_name}) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.`);
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–æ—Ç—É:', response.data.description);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram API:', error.message);
    return false;
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞
async function setupTelegramWebhook() {
  console.log('\nüîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞...');
  
  if (!process.env.TELEGRAM_TOKEN || !process.env.SERVER_BASE_URL) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –∏–ª–∏ SERVER_BASE_URL.');
    return false;
  }
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    await axios.get(`https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/deleteWebhook`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    const webhookUrl = `${process.env.SERVER_BASE_URL}/api/webhook/telegram`;
    const response = await axios.get(`https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/setWebhook`, {
      params: {
        url: webhookUrl,
        allowed_updates: JSON.stringify(['message', 'callback_query'])
      }
    });
    
    if (response.data.ok) {
      console.log(`‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${webhookUrl}`);
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:', response.data.description);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook:', error.message);
    return false;
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
function setupLogDirectory() {
  console.log('\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤...');
  
  const logDir = process.env.LOG_DIRECTORY || 'logs';
  
  if (!fs.existsSync(logDir)) {
    console.log(`‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${logDir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–µ–º...`);
    try {
      fs.mkdirSync(logDir, { recursive: true });
      console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${logDir} —Å–æ–∑–¥–∞–Ω–∞.`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤:', error.message);
      return false;
    }
  } else {
    console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${logDir} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
  }
  
  return true;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
async function runSetup() {
  console.log('\nüöÄ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Weekly Reports Bot...');
  
  // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const envReady = await setupEnvironmentVariables();
  if (!envReady) {
    console.log('\n‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.');
    rl.close();
    return;
  }
  
  // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
  const logDirReady = setupLogDirectory();
  if (!logDirReady) {
    console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π –¥–ª—è –ª–æ–≥–æ–≤.');
  }
  
  // –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets API
  const sheetsConnection = await testGoogleSheetsConnection();
  if (!sheetsConnection) {
    console.log('\n‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets API –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.');
    rl.close();
    return;
  }
  
  // –®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
  const sheetReady = await setupGoogleSheet(sheetsConnection.sheetsClient);
  if (!sheetReady) {
    console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã.');
  }
  
  // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot API
  const telegramReady = await testTelegramBotConnection();
  if (!telegramReady) {
    console.log('\n‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.');
    rl.close();
    return;
  }
  
  // –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
  console.log('\n–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –¥–ª—è Telegram –±–æ—Ç–∞? (y/n)');
  rl.question('> ', async (answer) => {
    if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      const webhookReady = await setupTelegramWebhook();
      if (!webhookReady) {
        console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π webhook.');
      }
    } else {
      console.log('\n‚è≠Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –ø—Ä–æ–ø—É—â–µ–Ω–∞.');
    }
    
    console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞) –∏–ª–∏ npm start (–ø—Ä–æ–¥–∞–∫—à–Ω)');
    console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤–∞—à–µ–º—É –±–æ—Ç—É –≤ Telegram');
    
    rl.close();
  });
}

// –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
runSetup().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', error);
  rl.close();
}); 