/**
 * –ö–ª–∞—Å—Å WeeklyReport –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
 */
class WeeklyReport {
  /**
   * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
   * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   * @param {number} [data.weekNumber] - –ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
   * @param {Date|string} [data.date] - –î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞
   * @param {number|string} data.userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {string} data.username - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {number} [data.state=5] - –û—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è (1-10)
   * @param {Array} [data.completedTasks=[]] - –ú–∞—Å—Å–∏–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
   * @param {Array} [data.incompleteTasks=[]] - –ú–∞—Å—Å–∏–≤ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
   * @param {Array} [data.nextWeekPlans=[]] - –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
   * @param {string} [data.comment=''] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
   */
  constructor(data = {}) {
    this.weekNumber = data.weekNumber || 0;
    this.date = data.date instanceof Date 
      ? data.date 
      : data.date ? new Date(data.date) : new Date();
    this.userId = data.userId || '';
    this.username = data.username || '';
    this.state = Math.min(Math.max(data.state || 5, 1), 10); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ—Ç 1 –¥–æ 10
    this.completedTasks = Array.isArray(data.completedTasks) ? data.completedTasks : [];
    this.incompleteTasks = Array.isArray(data.incompleteTasks) ? data.incompleteTasks : [];
    this.nextWeekPlans = Array.isArray(data.nextWeekPlans) ? data.nextWeekPlans : [];
    this.comment = data.comment || '';
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä WeeklyReport –∏–∑ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö Google Sheets
   * @param {Array} row - –°—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets
   * @returns {WeeklyReport|null} - –≠–∫–∑–µ–º–ø–ª—è—Ä –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ null –ø—Ä–∏ –æ—à–∏–±–∫–µ
   */
  static fromSheetRow(row) {
    if (!row || !Array.isArray(row) || row.length < 9) {
      return null;
    }
    
    try {
      const completedTasks = row[5] ? JSON.parse(row[5]) : [];
      const incompleteTasks = row[6] ? JSON.parse(row[6]) : [];
      const nextWeekPlans = row[7] ? JSON.parse(row[7]) : [];
      
      return new WeeklyReport({
        weekNumber: parseInt(row[0], 10) || 0,
        date: row[1] ? new Date(row[1]) : new Date(),
        userId: row[2],
        username: row[3],
        state: parseFloat(row[4]) || 5,
        completedTasks,
        incompleteTasks,
        nextWeekPlans,
        comment: row[8] || ''
      });
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WeeklyReport –∏–∑ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
      return null;
    }
  }

  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç—á–µ—Ç –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ Google Sheets
   * @returns {Array} - –ú–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
   */
  toSheetRow() {
    const formattedDate = this._formatDate(this.date);
    
    return [
      this.weekNumber,
      formattedDate,
      this.userId,
      this.username,
      this.state,
      JSON.stringify(this.completedTasks),
      JSON.stringify(this.incompleteTasks),
      JSON.stringify(this.nextWeekPlans),
      this.comment
    ];
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram
   * @returns {string} –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞
   */
  formatForDisplay() {
    const stateEmoji = this._getStateEmoji();
    const formattedDate = this._formatDate(this.date);
    
    let result = `üìã *–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç*\n`;
    result += `üìÖ –ù–µ–¥–µ–ª—è ${this.weekNumber}, ${formattedDate}\n`;
    result += `üë§ ${this.username}\n\n`;
    
    result += `${stateEmoji} *–°–æ—Å—Ç–æ—è–Ω–∏–µ:* ${this.state}/10\n\n`;
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    result += `‚úÖ *–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:* ${this.completedTasks.length}\n`;
    if (this.completedTasks.length > 0) {
      this.completedTasks.forEach((task, index) => {
        result += `  ${index + 1}. ${task}\n`;
      });
    } else {
      result += `  –ù–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n`;
    }
    
    result += `\n`;
    
    // –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    result += `‚ùå *–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:* ${this.incompleteTasks.length}\n`;
    if (this.incompleteTasks.length > 0) {
      this.incompleteTasks.forEach((task, index) => {
        result += `  ${index + 1}. ${task}\n`;
      });
    } else {
      result += `  –ù–µ—Ç –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n`;
    }
    
    result += `\n`;
    
    // –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    result += `üìù *–ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é:* ${this.nextWeekPlans.length}\n`;
    if (this.nextWeekPlans.length > 0) {
      this.nextWeekPlans.forEach((task, index) => {
        result += `  ${index + 1}. ${task}\n`;
      });
    } else {
      result += `  –ü–ª–∞–Ω—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã\n`;
    }
    
    // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if (this.comment) {
      result += `\nüí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:*\n${this.comment}\n`;
    }
    
    return result;
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * @returns {string} –≠–º–æ–¥–∑–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏—é
   * @private
   */
  _getStateEmoji() {
    if (this.state <= 3) return 'üò¢';
    if (this.state <= 5) return 'üòê';
    if (this.state <= 7) return 'üôÇ';
    if (this.state <= 9) return 'üòä';
    return 'ü§©';
  }
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
   * @param {Date} date - –î–∞—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   * @returns {string} –°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
   * @private
   */
  _formatDate(date) {
    if (!(date instanceof Date)) {
      date = new Date(date);
    }
    
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = date.getFullYear();
    
    return `${day}.${month}.${year}`;
  }
}

module.exports = WeeklyReport; 